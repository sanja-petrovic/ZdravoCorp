<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:ZdravoKlinika.View.PatientPages">

    <SolidColorBrush x:Key="backgroundActive" Color="White"/>
    <SolidColorBrush x:Key="backgroundLight" Color="White"/>
    <SolidColorBrush x:Key="backgroundDark" Color="SlateGray"/>

    <SolidColorBrush x:Key="titleActive" Color="Black"/>
    <SolidColorBrush x:Key="titleLight" Color="Black"/>
    <SolidColorBrush x:Key="titleDark" Color="#FFCCF0FF"/>
    <SolidColorBrush x:Key="grayishBlue" Color="#6897F8"/>
    <SolidColorBrush x:Key="strongPurple" Color="#FFAD61FF"/>
    <SolidColorBrush x:Key="lightPurple" Color="#6c63ff"/>
    <SolidColorBrush x:Key="calendarAccentColor" Color="#FFF552C2" Opacity="0.7" ></SolidColorBrush>
    <Style TargetType="{x:Type Button}" x:Key="menuButtonLight">
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="95" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="White" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" TextBlock.Foreground="{StaticResource lightPurple}" Width="85" Height="25" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Label x:Name="label" Content="{TemplateBinding Content}" HorizontalAlignment="Center"></Label>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="{StaticResource strongPurple}"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="{StaticResource strongPurple}"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="White" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="menuButtonDark">
        <Setter Property="Background" Value="SlateGray" />
        <Setter Property="Width" Value="95" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="SlateGray" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" TextBlock.Foreground="#00A7FF" Width="85" Height="25" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Label x:Name="label" Content="{TemplateBinding Content}" HorizontalAlignment="Center"></Label>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="{StaticResource grayishBlue}"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="{StaticResource grayishBlue}"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="Black" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="menuButtonActive">
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="95" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="White" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" TextBlock.Foreground="{StaticResource lightPurple}" Width="85" Height="25" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Label x:Name="label" Content="{TemplateBinding Content}" HorizontalAlignment="Center"></Label>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="{StaticResource strongPurple}"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="{StaticResource strongPurple}"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="White" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="sliderButtonActive">
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="White" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Image Source="/Resources/Images/sliderOn.png"></Image>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="sliderButtonOn">
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="White" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Image Source="/Resources/Images/sliderOn.png"></Image>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="sliderButtonOff">
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="White" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Image Source="/Resources/Images/sliderOff.png"></Image>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                       <Trigger Property="IsMouseOver" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Grid" x:Key="menuBackgroundLight">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FFAD61FF" Offset="1" />
                    <GradientStop Color="#FFE9D5FF" Offset="0.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Grid" x:Key="menuBackgroundDark">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF6F6F6F" Offset="0.0" />
                    <GradientStop Color="#FF6C5388" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Grid" x:Key="menuBackgroundActive">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FFAD61FF" Offset="1" />
                    <GradientStop Color="#FFE9D5FF" Offset="0.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Grid" x:Key="regularBackgroundActive">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush>
                    <GradientStop Color="#FFC9C6FF" Offset="0.0" />
                    <GradientStop Color="#FFE9D5FF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Grid" x:Key="regularBackgroundLight">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush>
                    <GradientStop Color="#FFC9C6FF" Offset="0.0" />
                    <GradientStop Color="#FFE9D5FF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Grid" x:Key="regularBackgroundDark">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush>
                    <GradientStop Color="#FF39384C" Offset="0.0" />
                    <GradientStop Color="#FF4C4554" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="regularButtonActive">
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{StaticResource lightPurple}" RadiusX="20" RadiusY="20" StrokeThickness="2" Fill="White" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" TextBlock.Foreground="{StaticResource lightPurple}" Width="71" Height="25" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Label x:Name="label" Content="{TemplateBinding Content}" HorizontalAlignment="Center"></Label>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="{StaticResource strongPurple}"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="{StaticResource strongPurple}"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="White" ></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="DarkGray"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="DarkGray"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="White" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="regularButtonLight">
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{StaticResource lightPurple}" RadiusX="20" RadiusY="20" StrokeThickness="2" Fill="White" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" TextBlock.Foreground="{StaticResource lightPurple}" Width="71" Height="25" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Label x:Name="label" Content="{TemplateBinding Content}" HorizontalAlignment="Center"></Label>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="{StaticResource strongPurple}"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="{StaticResource strongPurple}"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="White" ></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="DarkGray"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="DarkGray"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="White" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="regularButtonDark">
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{StaticResource grayishBlue}" RadiusX="20" RadiusY="20" StrokeThickness="2" Fill="SlateGray" />
                        <DockPanel Name="myContentPresenterDockPanel" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter x:Name="myContentPresenter" TextBlock.Foreground="Black" Width="71" Height="25" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                <ContentPresenter.Content>
                                    <Label x:Name="label" Content="{TemplateBinding Content}" HorizontalAlignment="Center"></Label>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="{StaticResource grayishBlue}"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="{StaticResource grayishBlue}"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="Black" ></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Rectangle.Stroke" TargetName="rectangle" Value="DarkGray"></Setter>
                            <Setter Property="Rectangle.Fill" TargetName="rectangle" Value="DarkGray"></Setter>
                            <Setter Property="Label.Foreground" TargetName="label" Value="White" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:LookupConvertor x:Key="LookupConverter"/>
    <Style x:Key="CalendarHighlightDaysStyle" TargetType="CalendarDayButton">
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource LookupConverter}">
                        <Binding/>
                        <Binding Path="DataContext.AppointmentDates" RelativeSource="{RelativeSource AncestorType=Calendar}"></Binding>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter Property="Background" Value="{StaticResource calendarAccentColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>