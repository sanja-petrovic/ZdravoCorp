<Page x:Class="ZdravoKlinika.View.Manager.Views.ManagerRoomsView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:views="clr-namespace:ZdravoKlinika.View.Manager.Views"
      xmlns:viewModel="clr-namespace:ZdravoKlinika.View.Manager.ViewModel"
      xmlns:vml="clr-namespace:ZdravoKlinika.Util"
      vml:ViewModelLocator.AutoHookedUpViewModel="True"   
      xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Prostorije">
    <Page.Resources>
        <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="5, 10, 5, 10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#32bfa5"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#32bfa5"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Cursor" Value="Arrow"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <theme:DataGridHeaderBorder Background="#FF7346F3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsClickable="{TemplateBinding CanUserSort}" Padding="0 5 0 5" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                <ContentPresenter Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </theme:DataGridHeaderBorder>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Padding="5,0,5,0">
                            <Grid>
                                <Grid>
                                    <Border x:Name="border" 
                                            CornerRadius="3,3,0,0"                                            
                                            Background="#FF7346F3"
                                            />
                                </Grid>
                                <ContentPresenter ContentSource="Header" Margin="10,5,10,5"
                                                    TextElement.FontSize ="15" TextElement.FontWeight="Bold"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="#32bfa5" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="#FF6D806D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate DataType="{x:Type viewModel:ManagerRoomsViewModel}">
            <views:ManagerRoomsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:ManagerDoRenovationViewModel}">
            <views:ManagerDoRenovationView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:ManagerCancelRenovationViewModel}">
            <views:ManagerCancelRenovationView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:ManagerTransferEquipmentViewModel}">
            <views:ManagerTransferEquipmentView/>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <TabControl Margin="0,15,0,0" Background="#FFACFFF0">
            <TabItem Header="Pregled" Cursor="Hand">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="750" Height="350">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"></ColumnDefinition>
                        <ColumnDefinition Width="80"></ColumnDefinition>
                        <ColumnDefinition Width="80"></ColumnDefinition>
                        <ColumnDefinition Width="80"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button Name="AddButton" Width="74" Height="25" Margin="-5,0,0,0" Background="#FF7346F3">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#32bfa5" TargetName="Border" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </Button.Resources>
                        <Button.Content>
                            <WrapPanel>
                                <Image Width="20" Height="20" Source="/Resources/Images/addPatient.png" Margin="-12,0,0,0"/>
                                <TextBlock Text="Dodaj" Margin="8,0,-10,0" Height="15" FontWeight="Bold"/>
                            </WrapPanel>
                        </Button.Content>
                    </Button>
                    <Button Name="EditButton" Width="74" Height="25" Grid.Column="1" Margin="-1,0,0,0" Background="#FF7346F3">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#32bfa5" TargetName="Border" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </Button.Resources>
                        <Button.Content>
                            <WrapPanel>
                                <Image Width="20" Height="20" Source="/Resources/Images/editPatient.png" Margin="-12,0,0,0"/>
                                <TextBlock Text="Izmeni" Margin="6,0,-10,0" Height="15" FontWeight="Bold"/>
                            </WrapPanel>
                        </Button.Content>
                    </Button>
                    <Button Name="DeleteButton" Width="74" Height="25" Grid.Column="2" Margin="4,0,0,0" Background="#FF7346F3">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#32bfa5" TargetName="Border" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </Button.Resources>
                        <Button.Content>
                            <WrapPanel>
                                <Image Width="20" Height="20" Source="/Resources/Images/delete.png" Margin="-12,0,0,0"/>
                                <TextBlock Text="Obriši" Margin="8,0,-12,0" Height="15" FontWeight="Bold"/>
                            </WrapPanel>
                        </Button.Content>
                    </Button>
                    <DataGrid Grid.Row="1" IsReadOnly="true" Grid.ColumnSpan="5" CellStyle="{DynamicResource DataGridCellStyle}" RowHeaderWidth="0" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" x:Name="dataGridRooms" GridLinesVisibility="None"  ItemsSource="{Binding Rooms}" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" Width="750"  AutoGenerateColumns="False" SelectedIndex="-1" Height="310" CanUserAddRows="False" CanUserSortColumns="False" FontFamily="Verdana">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Šifra" Binding="{Binding RoomId}" Width="*"/>
                            <DataGridTextColumn Header="Tip" Binding="{Binding Type}" Width="*"/>
                            <DataGridTextColumn Header="Naziv" Binding="{Binding Name}" Width="*"/>
                            <DataGridTextColumn Header="Sprat" Binding="{Binding Level}" Width="*"/>
                            <DataGridTextColumn Header="Broj" Binding="{Binding Number}" Width="*"/>
                            <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Zakazivanje renoviranja" Cursor="Hand">
                <Frame Content="{Binding DoRenovationViewModel}" NavigationUIVisibility="Hidden"/>
            </TabItem>
            <TabItem Header="Otkazivanje renoviranja" Cursor="Hand">
                <Frame Content="{Binding CancelRenovationViewModel}" NavigationUIVisibility="Hidden"/>
            </TabItem>
            <TabItem Header="Premeštanje opreme" Cursor="Hand">
                <Frame Content="{Binding TransferEquipmentViewModel}" NavigationUIVisibility="Hidden"/>
            </TabItem>
        </TabControl>
    </Grid>
</Page>
