<Application x:Class="ZdravoKlinika.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ZdravoKlinika"
             StartupUri="View/SignInWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <Style TargetType="TextBlock">
                        <Setter Property="FontFamily" Value="Nunito Sans" />
                    </Style>
                    <Style TargetType="Label">
                        <Setter Property="FontFamily" Value="Nunito Sans ExtraBold" />
                    </Style>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="FontFamily" Value="Nunito Sans" />
                    </Style>

                    <Style x:Key="fancyButtonStyle2" TargetType="Button">

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid">
                                        <Ellipse x:Name ="OuterRing" Width ="40" Height ="40" Fill="{TemplateBinding Background}"/>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <Border Background="{TemplateBinding Background}" BorderBrush="#FF9E98FF" BorderThickness="0">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  From="White" To="#FF9E98FF" Duration="0:0:0.2"/>
                                            <ColorAnimation Duration="0:0:0.2" From="#555557" To="White" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  From="#FF9E98FF" To="White" Duration="0:0:0.2"/>
                                            <ColorAnimation Duration="0:0:0.2" From="White" To="#555557" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"/>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>

            <Style x:Key="fancyButtonStyle3" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid">
                                <Ellipse x:Name ="OuterRing" Width ="40" Height ="40" Fill="{TemplateBinding Background}"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Border Background="{TemplateBinding Background}" BorderBrush="#FF9E98FF" BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                    <EventTrigger RoutedEvent="Button.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  From="#FF9E98FF" To="#c0bdff" Duration="0:0:0.2"/>
                                    <!--<ColorAnimation Duration="0:0:0.2" From="White" To="Black" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"/>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Button.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  From="#c0bdff" To="#FF9E98FF" Duration="0:0:0.2"/>
                                    <!--<ColorAnimation Duration="0:0:0.2" From="Black" To="White" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"/>-->

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="fancyButtonStyle4" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid">
                                <Ellipse x:Name ="OuterRing" Width ="40" Height ="40" Fill="{TemplateBinding Background}"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Border Background="{TemplateBinding Background}" BorderBrush="#FF9E98FF" BorderThickness="1">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                    <EventTrigger RoutedEvent="Button.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  From="White" To="#FFF1F2F9" Duration="0:0:0.2"/>
                                    <!--<ColorAnimation Duration="0:0:0.2" From="White" To="Black" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"/>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Button.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  From="#FFF1F2F9" To="White" Duration="0:0:0.2"/>
                                    <!--<ColorAnimation Duration="0:0:0.2" From="Black" To="White" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"/>-->

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="Focusual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="TabItem.Static.Background" Color="#FFE4E2FF"/>
                    <SolidColorBrush x:Key="TabItem.Static.Border" Color="Transparent" />
                    <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#FF9E98FF"/>
                    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Background1" Color="#FFFFFF"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Border1" Color="Transparent"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="Transparent"/>
                    <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Cursor" Value="Arrow"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <!--{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}-->
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,3,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Height="30" />
                                        <Border CornerRadius="10" x:Name="contentPanel" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="TabStripPlacement" Value="Bottom">
                                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                                        </Trigger>
                                        <Trigger Property="TabStripPlacement" Value="Left">
                                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                                        </Trigger>
                                        <Trigger Property="TabStripPlacement" Value="Right">
                                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>
    </Application.Resources>
</Application>
